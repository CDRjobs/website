type Job {
  id: ID!
  title: String!
  sourceUrl: String!
  discipline: String!
  locations: [Location!]
  remote: String!
  currency: String
  minSalary: Int
  maxSalary: Int
  seniority: String
  publishedAt: String
  company: Company!
  contractNature: String
  contractTime: String
}

input jobFiltersInput {
  country: String
  discipline: String
  cdrCategory: [String!]
  seniority: [String!]
  remote: [String!]
  contractNature: [String!]
  contractTime: [String!]
  companySize: [String!]
}

input paginationInput {
  limit: Int = 24
  start: Int = 0
}

type Pagination {
  limit: Int!
  total: Int!
  start: Int!
}

type jobSearchResults {
  pagination: Pagination!
  data: [Job!]!
}

type Query {
  searchJobs(filters: jobFiltersInput, pagination: paginationInput): jobSearchResults
}